generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         String       @id @default(cuid())
  clerk_id   String
  fullName   String
  imageUrl   String?
  createdAt  DateTime?    @default(now())
  deletedAt  DateTime?
  updatedAt  DateTime?
  apikeys    apikeys[]
  flows      flows[]
  workspaces workspaces[]
  threads    threads[]
}

model organizations {
  id            String      @id @default(cuid())
  clerk_id      String
  name          String
  license       LicenseType
  flow_endpoint String?
  createdAt     DateTime?   @default(now())
  deletedAt     DateTime?
  updatedAt     DateTime?
}

model apikeys {
  id            String     @id @default(cuid())
  client_id     String
  client_secret String
  permissions   String
  workspaceId   String
  name          String?
  createdAt     DateTime?  @default(now())
  deletedAt     DateTime?
  updatedAt     DateTime?
  workspaces    workspaces @relation(fields: [workspaceId], references: [id])
  creator       users?      @relation(fields: [creatorId], references: [id])
  creatorId     String?
}

model flows {
  id          String     @id @default(cuid())
  description String?
  endpoint    String
  apikey      String
  tags        String?
  type        FlowTypes  @default(TEXTGEN)
  workspaceId String
  name        String
  createdAt   DateTime?  @default(now())
  deletedAt   DateTime?
  updatedAt   DateTime?
  workspaces  workspaces @relation(fields: [workspaceId], references: [id])
  creator     users?      @relation(fields: [creatorId], references: [id])
  creatorId   String?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model workspaces {
  id          String     @id @default(cuid())
  name        String
  description String?
  slug        String
  model       ModelTypes @default(OPENAI)
  isPrivate   Boolean   @default(false)
  createdAt   DateTime?  @default(now())
  deletedAt   DateTime?
  updatedAt   DateTime?
  ownerId     String?    @db.VarChar
  apikeys     apikeys[]
  flows       flows[]
  threads     threads[]
  creator     users?     @relation(fields: [creatorId], references: [id])
  creatorId   String?
}

model threads {
  id          String     @id @default(cuid())
  name        String?
  link        String
  createdAt   DateTime?  @default(now())
  deletedAt   DateTime?
  updatedAt   DateTime?
  workspaceId String
  workspaces  workspaces @relation(fields: [workspaceId], references: [id])
  creator     users?     @relation(fields: [creatorId], references: [id])
  creatorId   String?
}

enum LicenseType {
  TRIAL
  LIMITED
  OPEN
}

enum ModelTypes {
  OPENAI
  ANTHROPIC
  COHERE
  GEMINI
  MISTRAL
  LLAMA3
}

enum FlowTypes {
  OPENAI
  ANTHROPIC
  GEMINI
  IMAGEGEN
  TEXTGEN
  AGENT
  CODEGEN
  CODEINTEPRETER
  RAG
  OTHERML
}
